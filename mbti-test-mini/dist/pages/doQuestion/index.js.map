{"version":3,"file":"pages/doQuestion/index.js","mappingssources":["webpack://mbti-test-mini/./src/pages/doQuestion/index.tsx?5f9b","webpack://mbti-test-mini/._src_pages_doQuestion_index.tsx","webpack://mbti-test-mini/._node_modules_@babel_runtime_helpers_esm_arrayWithHoles.js","webpack://mbti-test-mini/._node_modules_@babel_runtime_helpers_esm_iterableToArrayLimit.js","webpack://mbti-test-mini/._node_modules_@babel_runtime_helpers_esm_nonIterableRest.js","webpack://mbti-test-mini/._node_modules_@babel_runtime_helpers_esm_slicedToArray.js"],"sourcesContent":["import _slicedToArray from \"D:/MyCode/PlanetProjects/maidada/mbti-test-mini/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { View } from \"@tarojs/components\";\nimport Taro from \"@tarojs/taro\";\nimport { AtButton, AtRadio } from \"taro-ui\";\nimport { useEffect, useState } from \"react\";\nimport GlobalFooter from \"../../components/GlobalFooter\";\nimport questions from \"../../data/questions.json\";\nimport \"./index.scss\";\n\n/**\n * 做题页面\n */\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function () {\n  // 当前题目序号（从 1 开始）\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    current = _useState2[0],\n    setCurrent = _useState2[1];\n  // 当前题目\n  var _useState3 = useState(questions[0]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var questionOptions = currentQuestion.options.map(function (option) {\n    return {\n      label: \"\".concat(option.key, \". \").concat(option.value),\n      value: option.key\n    };\n  });\n  // 当前答案\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentAnswer = _useState6[0],\n    setCurrentAnswer = _useState6[1];\n  // 回答列表\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 1),\n    answerList = _useState8[0];\n\n  // 序号变化时，切换当前题目和当前回答\n  useEffect(function () {\n    setCurrentQuestion(questions[current - 1]);\n    setCurrentAnswer(answerList[current - 1]);\n  }, [current]);\n  return /*#__PURE__*/_jsxs(View, {\n    className: \"doQuestionPage\",\n    children: [/*#__PURE__*/_jsxs(View, {\n      className: \"at-article__h2 title\",\n      children: [current, \"\\u3001\", currentQuestion.title]\n    }), /*#__PURE__*/_jsx(View, {\n      className: \"options-wrapper\",\n      children: /*#__PURE__*/_jsx(AtRadio, {\n        options: questionOptions,\n        value: currentAnswer,\n        onClick: function onClick(value) {\n          setCurrentAnswer(value);\n          // 记录回答\n          answerList[current - 1] = value;\n        }\n      })\n    }), current < questions.length && /*#__PURE__*/_jsx(AtButton, {\n      type: \"primary\",\n      circle: true,\n      className: \"controlBtn\",\n      disabled: !currentAnswer,\n      onClick: function onClick() {\n        return setCurrent(current + 1);\n      },\n      children: \"\\u4E0B\\u4E00\\u9898\"\n    }), current == questions.length && /*#__PURE__*/_jsx(AtButton, {\n      type: \"primary\",\n      circle: true,\n      className: \"controlBtn\",\n      disabled: !currentAnswer,\n      onClick: function onClick() {\n        // 传递答案\n        Taro.setStorageSync(\"answerList\", answerList);\n        // 跳转到结果页面\n        Taro.navigateTo({\n          url: \"/pages/result/index\"\n        });\n      },\n      children: \"\\u67E5\\u770B\\u7ED3\\u679C\"\n    }), current > 1 && /*#__PURE__*/_jsx(AtButton, {\n      circle: true,\n      className: \"controlBtn\",\n      onClick: function onClick() {\n        return setCurrent(current - 1);\n      },\n      children: \"\\u4E0A\\u4E00\\u9898\"\n    }), /*#__PURE__*/_jsx(GlobalFooter, {})]\n  });\n});","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=pages/doQuestion/index!./index.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/doQuestion/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}"],"names":[],"sourceRoot":""}